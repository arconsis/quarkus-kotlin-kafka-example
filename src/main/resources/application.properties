#
## Kafka
kafka.bootstrap.servers=localhost:9092
#
## Kafka SSL Connection (only needed in case of en SSL protected connection)
# mp.messaging.connector.smallrye-kafka.security.protocol=SSL
# mp.messaging.connector.smallrye-kafka.ssl.keystore.location=${KAFKA_CERTIFICATES_DIRECTORY}/client.keystore.jks
# mp.messaging.connector.smallrye-kafka.ssl.keystore.password=${KAFKA_KEYSTORE_PASSWORD}
# mp.messaging.connector.smallrye-kafka.ssl.key.password=${KAFKA_SSL_KEY_PASSWORD}
# mp.messaging.connector.smallrye-kafka.ssl.truststore.location=${KAFKA_CERTIFICATES_DIRECTORY}/client.truststore.jks
# mp.messaging.connector.smallrye-kafka.ssl.truststore.password=${KAFKA_TRUSTSTORE_PASSWORD}
# kafka.ssl.endpoint.identification.algorithm=
#
# Channels
## outgoing events
mp.messaging.outgoing.messages-out.connector=smallrye-kafka
mp.messaging.outgoing.messages-out.topic=meetup-messages
mp.messaging.outgoing.messages-out.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
## incoming events
mp.messaging.incoming.messages-in.connector=smallrye-kafka
mp.messaging.incoming.messages-in.topic=meetup-messages
mp.messaging.incoming.messages-in.value.deserializer=com.arconsis.meetup.MeetupEventDtoDeserializer
mp.messaging.incoming.messages-in.auto.offset.reset=earliest
mp.messaging.incoming.messages-in.group.id=meetup-service
